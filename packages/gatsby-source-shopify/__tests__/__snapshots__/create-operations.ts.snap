// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`createOperations creates the proper queries and operations with sales channel and with lastBuildTime 1`] = `
Array [
  Array [
    Object {
      "request": [Function],
    },
    "
      mutation INITIATE_BULK_OPERATION {
        bulkOperationRunQuery(
        query: \\"\\"\\"
          
      {
        products(query: \\"(status:active) AND (published_status:'__TEST__:visible') AND (created_at:>='1970-01-01T00:00:00.000Z' OR updated_at:>='1970-01-01T00:00:00.000Z')\\") {
          edges {
            node {
              createdAt
              collections {
                edges {
                  node {
                    id
                  }
                }
              }
              description
              descriptionHtml
              featuredImage {
                altText
                height
                id
                originalSrc
                src
                transformedSrc
                width
              }
              featuredMedia {
                ... on Node {
                  id
                }
              }
              feedback {
                details {
                  app {
                    id
                  }
                  link {
                    label
                    url
                  }
                  messages {
                    field
                    message
                  }
                }
                summary
              }
              giftCardTemplateSuffix
              handle
              hasOnlyDefaultVariant
              hasOutOfStockVariants
              id
              isGiftCard
              legacyResourceId
              media {
                edges {
                  node {
                    alt
                    mediaContentType
                    mediaErrors {
                      code
                      details
                      message
                    }
                    preview {
                      image {
                        altText
                        height
                        id
                        originalSrc
                        src
                        transformedSrc
                        width
                      }
                      status
                    }
                    status
                    ... on ExternalVideo {
                      embeddedUrl
                      host
                      id
                    }
                    ... on MediaImage {
                      createdAt
                      fileErrors {
                        code
                        details
                        message
                      }
                      fileStatus
                      id
                      image {
                        altText
                        height
                        id
                        originalSrc
                        src
                        transformedSrc
                        width
                      }
                      mimeType
                    }
                    ... on Model3d {
                      filename
                      id
                      originalSource {
                        filesize
                        format
                        mimeType
                        url
                      }
                      sources {
                        filesize
                        format
                        mimeType
                        url
                      }
                    }
                    ... on Video {
                      filename
                      id
                      originalSource {
                        format
                        height
                        mimeType
                        url
                        width
                      }
                      sources {
                        format
                        height
                        mimeType
                        url
                        width
                      }
                    }
                  }
                }
              }
              mediaCount {
                count
                precision
              }
              metafields {
                edges {
                  node {
                    createdAt
                    description
                    id
                    key
                    legacyResourceId
                    namespace
                    ownerType
                    type
                    updatedAt
                    value
                    valueType: type
                  }
                }
              }
              onlineStorePreviewUrl
              onlineStoreUrl
              options {
                id
                name
                position
                values
              }
              priceRange {
                maxVariantPrice {
                  amount
                  currencyCode
                }
                minVariantPrice {
                  amount
                  currencyCode
                }
              }
              priceRangeV2 {
                maxVariantPrice {
                  amount
                  currencyCode
                }
                minVariantPrice {
                  amount
                  currencyCode
                }
              }
              productType
              publishedAt
              requiresSellingPlan
              sellingPlanGroupsCount {
                count
                precision
              }
              seo {
                description
                title
              }
              status
              storefrontId
              tags
              templateSuffix
              title
              totalInventory
              totalVariants
              tracksInventory
              updatedAt
              variants {
                edges {
                  node {
                    id
                  }
                }
              }
              vendor
            }
          }
        }
      }
    
        \\"\\"\\"
      ) {
        bulkOperation {
          id
          status
        }
        userErrors {
          field
          message
        }
      }
    }
    ",
    "products",
  ],
  Array [
    Object {
      "request": [Function],
    },
    "
      mutation INITIATE_BULK_OPERATION {
        bulkOperationRunQuery(
        query: \\"\\"\\"
          
      {
        productVariants(query: \\"(status:active) AND (published_status:'__TEST__:visible') AND (created_at:>='1970-01-01T00:00:00.000Z' OR updated_at:>='1970-01-01T00:00:00.000Z')\\") {
          edges {
            node {
              availableForSale
              barcode
              compareAtPrice
              createdAt
              displayName
              id
              image {
                altText
                height
                id
                originalSrc
                src
                transformedSrc
                width
              }
              inventoryItem @include(if: false) {
                countryCodeOfOrigin
                createdAt
                duplicateSkuCount
                harmonizedSystemCode
                id
                inventoryHistoryUrl
                inventoryLevels {
                  edges {
                    node {
                      quantities(names: [\\"incoming\\", \\"available\\", \\"committed\\", \\"reserved\\", \\"damaged\\", \\"safety_stock\\", \\"quality_control\\"]) {
                        name
                        quantity
                      }
                      id
                      location {
                        id
                      }
                    }
                  }
                }
                legacyResourceId
                locationsCount {
                  count
                  precision
                }
                provinceCodeOfOrigin
                requiresShipping
                sku
                tracked
                trackedEditable {
                  locked
                  reason
                }
                unitCost {
                  amount
                  currencyCode
                }
                updatedAt
                variant {
                  id
                }
              }
              inventoryPolicy
              inventoryQuantity
              legacyResourceId
              media {
                edges {
                  node {
                    ... on Node {
                      id
                    }
                  }
                }
              }
              position
              presentmentPrices {
                edges {
                  node {
                    compareAtPrice {
                      amount
                      currencyCode
                    }
                    price {
                      amount
                      currencyCode
                    }
                    __typename
                  }
                }
              }
              price
              product {
                id
              }
              requiresShipping
              selectedOptions {
                name
                value
              }
              sellingPlanGroupsCount {
                count
                precision
              }
              sku
              storefrontId
              taxCode
              taxable
              title
              updatedAt
              weight
              weightUnit
              metafields {
                edges {
                  node {
                    createdAt
                    description
                    id
                    key
                    legacyResourceId
                    namespace
                    ownerType
                    type
                    updatedAt
                    value
                    valueType: type
                  }
                }
              }
            }
          }
        }
      }
    
        \\"\\"\\"
      ) {
        bulkOperation {
          id
          status
        }
        userErrors {
          field
          message
        }
      }
    }
    ",
    "variants",
  ],
  Array [
    Object {
      "request": [Function],
    },
    "
      mutation INITIATE_BULK_OPERATION {
        bulkOperationRunQuery(
        query: \\"\\"\\"
          
      {
        orders(query: \\"(created_at:>='1970-01-01T00:00:00.000Z' OR updated_at:>='1970-01-01T00:00:00.000Z')\\") {
          edges {
            node {
              closed
              closedAt
              edited
              id
              lineItems {
                edges {
                  node {
                    id
                    product {
                      id
                    }
                  }
                }
              }
              refunds {
                createdAt
                id
              }
            }
          }
        }
      }
        \\"\\"\\"
      ) {
        bulkOperation {
          id
          status
        }
        userErrors {
          field
          message
        }
      }
    }
    ",
    "orders",
  ],
  Array [
    Object {
      "request": [Function],
    },
    "
      mutation INITIATE_BULK_OPERATION {
        bulkOperationRunQuery(
        query: \\"\\"\\"
          
      {
        collections(query: \\"(published_status:'__TEST__:visible') AND (created_at:>='1970-01-01T00:00:00.000Z' OR updated_at:>='1970-01-01T00:00:00.000Z')\\") {
          edges {
            node {
              description
              descriptionHtml
              feedback {
                details {
                  app {
                    id
                  }
                  link {
                    label
                    url
                  }
                  messages {
                    field
                    message
                  }
                }
                summary
              }
              handle
              id
              image {
                altText
                height
                id
                originalSrc
                src
                transformedSrc
                width
              }
              legacyResourceId
              metafields {
                edges {
                  node {
                    createdAt
                    description
                    id
                    key
                    legacyResourceId
                    namespace
                    ownerType
                    updatedAt
                    value
                    type
                    valueType: type
                  }
                }
              }
              products {
                edges {
                  node {
                    id
                  }
                }
              }
              productsCount {
                count
                precision
              }
              ruleSet {
                appliedDisjunctively
                rules {
                  column
                  condition
                  relation
                }
              }
              seo {
                description
                title
              }
              sortOrder
              storefrontId
              templateSuffix
              title
              updatedAt
            }
          }
        }
      }
      
        \\"\\"\\"
      ) {
        bulkOperation {
          id
          status
        }
        userErrors {
          field
          message
        }
      }
    }
    ",
    "collections",
  ],
  Array [
    Object {
      "request": [Function],
    },
    "
      mutation INITIATE_BULK_OPERATION {
        bulkOperationRunQuery(
        query: \\"\\"\\"
          
      {
        locations(includeInactive: true, includeLegacy: true, query: \\"(published_status:'__TEST__:visible') AND (created_at:>='1970-01-01T00:00:00.000Z' OR updated_at:>='1970-01-01T00:00:00.000Z')\\") {
          edges {
            node {
              activatable
              address {
                address1
                address2
                city
                country
                countryCode
                formatted
                latitude
                longitude
                phone
                province
                provinceCode
                zip
              }
              addressVerified
              deactivatable
              deactivatedAt
              deletable
              fulfillmentService {
                fulfillmentOrdersOptIn
                handle
                id
                inventoryManagement
                productBased
                serviceName
                shippingMethods {
                  code
                  label
                }
                type
              }
              fulfillsOnlineOrders
              hasActiveInventory
              hasUnfulfilledOrders
              id
              isActive
              legacyResourceId
              name
              shipsInventory
            }
          }
        }
      }
      
        \\"\\"\\"
      ) {
        bulkOperation {
          id
          status
        }
        userErrors {
          field
          message
        }
      }
    }
    ",
    "locations",
  ],
]
`;

exports[`createOperations creates the proper queries and operations with sales channel and with lastBuildTime 2`] = `
Object {
  "cancelOperation": [Function],
  "cancelOperationInProgress": [Function],
  "collectionsOperation": Object {
    "execute": [Function],
    "name": "collections",
  },
  "completedOperation": [Function],
  "finishLastOperation": [Function],
  "locationsOperation": Object {
    "execute": [Function],
    "name": "locations",
  },
  "ordersOperation": Object {
    "execute": [Function],
    "name": "orders",
  },
  "productVariantsOperation": Object {
    "execute": [Function],
    "name": "variants",
  },
  "productsOperation": Object {
    "execute": [Function],
    "name": "products",
  },
}
`;

exports[`createOperations creates the proper queries and operations with sales channel and without lastBuildTime 1`] = `
Array [
  Array [
    Object {
      "request": [Function],
    },
    "
      mutation INITIATE_BULK_OPERATION {
        bulkOperationRunQuery(
        query: \\"\\"\\"
          
      {
        products(query: \\"(status:active) AND (published_status:'__TEST__:visible')\\") {
          edges {
            node {
              createdAt
              collections {
                edges {
                  node {
                    id
                  }
                }
              }
              description
              descriptionHtml
              featuredImage {
                altText
                height
                id
                originalSrc
                src
                transformedSrc
                width
              }
              featuredMedia {
                ... on Node {
                  id
                }
              }
              feedback {
                details {
                  app {
                    id
                  }
                  link {
                    label
                    url
                  }
                  messages {
                    field
                    message
                  }
                }
                summary
              }
              giftCardTemplateSuffix
              handle
              hasOnlyDefaultVariant
              hasOutOfStockVariants
              id
              isGiftCard
              legacyResourceId
              media {
                edges {
                  node {
                    alt
                    mediaContentType
                    mediaErrors {
                      code
                      details
                      message
                    }
                    preview {
                      image {
                        altText
                        height
                        id
                        originalSrc
                        src
                        transformedSrc
                        width
                      }
                      status
                    }
                    status
                    ... on ExternalVideo {
                      embeddedUrl
                      host
                      id
                    }
                    ... on MediaImage {
                      createdAt
                      fileErrors {
                        code
                        details
                        message
                      }
                      fileStatus
                      id
                      image {
                        altText
                        height
                        id
                        originalSrc
                        src
                        transformedSrc
                        width
                      }
                      mimeType
                    }
                    ... on Model3d {
                      filename
                      id
                      originalSource {
                        filesize
                        format
                        mimeType
                        url
                      }
                      sources {
                        filesize
                        format
                        mimeType
                        url
                      }
                    }
                    ... on Video {
                      filename
                      id
                      originalSource {
                        format
                        height
                        mimeType
                        url
                        width
                      }
                      sources {
                        format
                        height
                        mimeType
                        url
                        width
                      }
                    }
                  }
                }
              }
              mediaCount {
                count
                precision
              }
              metafields {
                edges {
                  node {
                    createdAt
                    description
                    id
                    key
                    legacyResourceId
                    namespace
                    ownerType
                    type
                    updatedAt
                    value
                    valueType: type
                  }
                }
              }
              onlineStorePreviewUrl
              onlineStoreUrl
              options {
                id
                name
                position
                values
              }
              priceRange {
                maxVariantPrice {
                  amount
                  currencyCode
                }
                minVariantPrice {
                  amount
                  currencyCode
                }
              }
              priceRangeV2 {
                maxVariantPrice {
                  amount
                  currencyCode
                }
                minVariantPrice {
                  amount
                  currencyCode
                }
              }
              productType
              publishedAt
              requiresSellingPlan
              sellingPlanGroupsCount {
                count
                precision
              }
              seo {
                description
                title
              }
              status
              storefrontId
              tags
              templateSuffix
              title
              totalInventory
              totalVariants
              tracksInventory
              updatedAt
              variants {
                edges {
                  node {
                    id
                  }
                }
              }
              vendor
            }
          }
        }
      }
    
        \\"\\"\\"
      ) {
        bulkOperation {
          id
          status
        }
        userErrors {
          field
          message
        }
      }
    }
    ",
    "products",
  ],
  Array [
    Object {
      "request": [Function],
    },
    "
      mutation INITIATE_BULK_OPERATION {
        bulkOperationRunQuery(
        query: \\"\\"\\"
          
      {
        productVariants(query: \\"(status:active) AND (published_status:'__TEST__:visible')\\") {
          edges {
            node {
              availableForSale
              barcode
              compareAtPrice
              createdAt
              displayName
              id
              image {
                altText
                height
                id
                originalSrc
                src
                transformedSrc
                width
              }
              inventoryItem @include(if: false) {
                countryCodeOfOrigin
                createdAt
                duplicateSkuCount
                harmonizedSystemCode
                id
                inventoryHistoryUrl
                inventoryLevels {
                  edges {
                    node {
                      quantities(names: [\\"incoming\\", \\"available\\", \\"committed\\", \\"reserved\\", \\"damaged\\", \\"safety_stock\\", \\"quality_control\\"]) {
                        name
                        quantity
                      }
                      id
                      location {
                        id
                      }
                    }
                  }
                }
                legacyResourceId
                locationsCount {
                  count
                  precision
                }
                provinceCodeOfOrigin
                requiresShipping
                sku
                tracked
                trackedEditable {
                  locked
                  reason
                }
                unitCost {
                  amount
                  currencyCode
                }
                updatedAt
                variant {
                  id
                }
              }
              inventoryPolicy
              inventoryQuantity
              legacyResourceId
              media {
                edges {
                  node {
                    ... on Node {
                      id
                    }
                  }
                }
              }
              position
              presentmentPrices {
                edges {
                  node {
                    compareAtPrice {
                      amount
                      currencyCode
                    }
                    price {
                      amount
                      currencyCode
                    }
                    __typename
                  }
                }
              }
              price
              product {
                id
              }
              requiresShipping
              selectedOptions {
                name
                value
              }
              sellingPlanGroupsCount {
                count
                precision
              }
              sku
              storefrontId
              taxCode
              taxable
              title
              updatedAt
              weight
              weightUnit
              metafields {
                edges {
                  node {
                    createdAt
                    description
                    id
                    key
                    legacyResourceId
                    namespace
                    ownerType
                    type
                    updatedAt
                    value
                    valueType: type
                  }
                }
              }
            }
          }
        }
      }
    
        \\"\\"\\"
      ) {
        bulkOperation {
          id
          status
        }
        userErrors {
          field
          message
        }
      }
    }
    ",
    "variants",
  ],
  Array [
    Object {
      "request": [Function],
    },
    "
      mutation INITIATE_BULK_OPERATION {
        bulkOperationRunQuery(
        query: \\"\\"\\"
          
      {
        orders(query: \\"\\") {
          edges {
            node {
              closed
              closedAt
              edited
              id
              lineItems {
                edges {
                  node {
                    id
                    product {
                      id
                    }
                  }
                }
              }
              refunds {
                createdAt
                id
              }
            }
          }
        }
      }
        \\"\\"\\"
      ) {
        bulkOperation {
          id
          status
        }
        userErrors {
          field
          message
        }
      }
    }
    ",
    "orders",
  ],
  Array [
    Object {
      "request": [Function],
    },
    "
      mutation INITIATE_BULK_OPERATION {
        bulkOperationRunQuery(
        query: \\"\\"\\"
          
      {
        collections(query: \\"(published_status:'__TEST__:visible')\\") {
          edges {
            node {
              description
              descriptionHtml
              feedback {
                details {
                  app {
                    id
                  }
                  link {
                    label
                    url
                  }
                  messages {
                    field
                    message
                  }
                }
                summary
              }
              handle
              id
              image {
                altText
                height
                id
                originalSrc
                src
                transformedSrc
                width
              }
              legacyResourceId
              metafields {
                edges {
                  node {
                    createdAt
                    description
                    id
                    key
                    legacyResourceId
                    namespace
                    ownerType
                    updatedAt
                    value
                    type
                    valueType: type
                  }
                }
              }
              products {
                edges {
                  node {
                    id
                  }
                }
              }
              productsCount {
                count
                precision
              }
              ruleSet {
                appliedDisjunctively
                rules {
                  column
                  condition
                  relation
                }
              }
              seo {
                description
                title
              }
              sortOrder
              storefrontId
              templateSuffix
              title
              updatedAt
            }
          }
        }
      }
      
        \\"\\"\\"
      ) {
        bulkOperation {
          id
          status
        }
        userErrors {
          field
          message
        }
      }
    }
    ",
    "collections",
  ],
  Array [
    Object {
      "request": [Function],
    },
    "
      mutation INITIATE_BULK_OPERATION {
        bulkOperationRunQuery(
        query: \\"\\"\\"
          
      {
        locations(includeInactive: true, includeLegacy: true, query: \\"(published_status:'__TEST__:visible')\\") {
          edges {
            node {
              activatable
              address {
                address1
                address2
                city
                country
                countryCode
                formatted
                latitude
                longitude
                phone
                province
                provinceCode
                zip
              }
              addressVerified
              deactivatable
              deactivatedAt
              deletable
              fulfillmentService {
                fulfillmentOrdersOptIn
                handle
                id
                inventoryManagement
                productBased
                serviceName
                shippingMethods {
                  code
                  label
                }
                type
              }
              fulfillsOnlineOrders
              hasActiveInventory
              hasUnfulfilledOrders
              id
              isActive
              legacyResourceId
              name
              shipsInventory
            }
          }
        }
      }
      
        \\"\\"\\"
      ) {
        bulkOperation {
          id
          status
        }
        userErrors {
          field
          message
        }
      }
    }
    ",
    "locations",
  ],
]
`;

exports[`createOperations creates the proper queries and operations with sales channel and without lastBuildTime 2`] = `
Object {
  "cancelOperation": [Function],
  "cancelOperationInProgress": [Function],
  "collectionsOperation": Object {
    "execute": [Function],
    "name": "collections",
  },
  "completedOperation": [Function],
  "finishLastOperation": [Function],
  "locationsOperation": Object {
    "execute": [Function],
    "name": "locations",
  },
  "ordersOperation": Object {
    "execute": [Function],
    "name": "orders",
  },
  "productVariantsOperation": Object {
    "execute": [Function],
    "name": "variants",
  },
  "productsOperation": Object {
    "execute": [Function],
    "name": "products",
  },
}
`;

exports[`createOperations creates the proper queries and operations without sales channel and with lastBuildTime 1`] = `
Array [
  Array [
    Object {
      "request": [Function],
    },
    "
      mutation INITIATE_BULK_OPERATION {
        bulkOperationRunQuery(
        query: \\"\\"\\"
          
      {
        products(query: \\"(status:active) AND (published_status:published) AND (created_at:>='1970-01-01T00:00:00.000Z' OR updated_at:>='1970-01-01T00:00:00.000Z')\\") {
          edges {
            node {
              createdAt
              collections {
                edges {
                  node {
                    id
                  }
                }
              }
              description
              descriptionHtml
              featuredImage {
                altText
                height
                id
                originalSrc
                src
                transformedSrc
                width
              }
              featuredMedia {
                ... on Node {
                  id
                }
              }
              feedback {
                details {
                  app {
                    id
                  }
                  link {
                    label
                    url
                  }
                  messages {
                    field
                    message
                  }
                }
                summary
              }
              giftCardTemplateSuffix
              handle
              hasOnlyDefaultVariant
              hasOutOfStockVariants
              id
              isGiftCard
              legacyResourceId
              media {
                edges {
                  node {
                    alt
                    mediaContentType
                    mediaErrors {
                      code
                      details
                      message
                    }
                    preview {
                      image {
                        altText
                        height
                        id
                        originalSrc
                        src
                        transformedSrc
                        width
                      }
                      status
                    }
                    status
                    ... on ExternalVideo {
                      embeddedUrl
                      host
                      id
                    }
                    ... on MediaImage {
                      createdAt
                      fileErrors {
                        code
                        details
                        message
                      }
                      fileStatus
                      id
                      image {
                        altText
                        height
                        id
                        originalSrc
                        src
                        transformedSrc
                        width
                      }
                      mimeType
                    }
                    ... on Model3d {
                      filename
                      id
                      originalSource {
                        filesize
                        format
                        mimeType
                        url
                      }
                      sources {
                        filesize
                        format
                        mimeType
                        url
                      }
                    }
                    ... on Video {
                      filename
                      id
                      originalSource {
                        format
                        height
                        mimeType
                        url
                        width
                      }
                      sources {
                        format
                        height
                        mimeType
                        url
                        width
                      }
                    }
                  }
                }
              }
              mediaCount {
                count
                precision
              }
              metafields {
                edges {
                  node {
                    createdAt
                    description
                    id
                    key
                    legacyResourceId
                    namespace
                    ownerType
                    type
                    updatedAt
                    value
                    valueType: type
                  }
                }
              }
              onlineStorePreviewUrl
              onlineStoreUrl
              options {
                id
                name
                position
                values
              }
              priceRange {
                maxVariantPrice {
                  amount
                  currencyCode
                }
                minVariantPrice {
                  amount
                  currencyCode
                }
              }
              priceRangeV2 {
                maxVariantPrice {
                  amount
                  currencyCode
                }
                minVariantPrice {
                  amount
                  currencyCode
                }
              }
              productType
              publishedAt
              requiresSellingPlan
              sellingPlanGroupsCount {
                count
                precision
              }
              seo {
                description
                title
              }
              status
              storefrontId
              tags
              templateSuffix
              title
              totalInventory
              totalVariants
              tracksInventory
              updatedAt
              variants {
                edges {
                  node {
                    id
                  }
                }
              }
              vendor
            }
          }
        }
      }
    
        \\"\\"\\"
      ) {
        bulkOperation {
          id
          status
        }
        userErrors {
          field
          message
        }
      }
    }
    ",
    "products",
  ],
  Array [
    Object {
      "request": [Function],
    },
    "
      mutation INITIATE_BULK_OPERATION {
        bulkOperationRunQuery(
        query: \\"\\"\\"
          
      {
        productVariants(query: \\"(status:active) AND (published_status:published) AND (created_at:>='1970-01-01T00:00:00.000Z' OR updated_at:>='1970-01-01T00:00:00.000Z')\\") {
          edges {
            node {
              availableForSale
              barcode
              compareAtPrice
              createdAt
              displayName
              id
              image {
                altText
                height
                id
                originalSrc
                src
                transformedSrc
                width
              }
              inventoryItem @include(if: false) {
                countryCodeOfOrigin
                createdAt
                duplicateSkuCount
                harmonizedSystemCode
                id
                inventoryHistoryUrl
                inventoryLevels {
                  edges {
                    node {
                      quantities(names: [\\"incoming\\", \\"available\\", \\"committed\\", \\"reserved\\", \\"damaged\\", \\"safety_stock\\", \\"quality_control\\"]) {
                        name
                        quantity
                      }
                      id
                      location {
                        id
                      }
                    }
                  }
                }
                legacyResourceId
                locationsCount {
                  count
                  precision
                }
                provinceCodeOfOrigin
                requiresShipping
                sku
                tracked
                trackedEditable {
                  locked
                  reason
                }
                unitCost {
                  amount
                  currencyCode
                }
                updatedAt
                variant {
                  id
                }
              }
              inventoryPolicy
              inventoryQuantity
              legacyResourceId
              media {
                edges {
                  node {
                    ... on Node {
                      id
                    }
                  }
                }
              }
              position
              presentmentPrices {
                edges {
                  node {
                    compareAtPrice {
                      amount
                      currencyCode
                    }
                    price {
                      amount
                      currencyCode
                    }
                    __typename
                  }
                }
              }
              price
              product {
                id
              }
              requiresShipping
              selectedOptions {
                name
                value
              }
              sellingPlanGroupsCount {
                count
                precision
              }
              sku
              storefrontId
              taxCode
              taxable
              title
              updatedAt
              weight
              weightUnit
              metafields {
                edges {
                  node {
                    createdAt
                    description
                    id
                    key
                    legacyResourceId
                    namespace
                    ownerType
                    type
                    updatedAt
                    value
                    valueType: type
                  }
                }
              }
            }
          }
        }
      }
    
        \\"\\"\\"
      ) {
        bulkOperation {
          id
          status
        }
        userErrors {
          field
          message
        }
      }
    }
    ",
    "variants",
  ],
  Array [
    Object {
      "request": [Function],
    },
    "
      mutation INITIATE_BULK_OPERATION {
        bulkOperationRunQuery(
        query: \\"\\"\\"
          
      {
        orders(query: \\"(created_at:>='1970-01-01T00:00:00.000Z' OR updated_at:>='1970-01-01T00:00:00.000Z')\\") {
          edges {
            node {
              closed
              closedAt
              edited
              id
              lineItems {
                edges {
                  node {
                    id
                    product {
                      id
                    }
                  }
                }
              }
              refunds {
                createdAt
                id
              }
            }
          }
        }
      }
        \\"\\"\\"
      ) {
        bulkOperation {
          id
          status
        }
        userErrors {
          field
          message
        }
      }
    }
    ",
    "orders",
  ],
  Array [
    Object {
      "request": [Function],
    },
    "
      mutation INITIATE_BULK_OPERATION {
        bulkOperationRunQuery(
        query: \\"\\"\\"
          
      {
        collections(query: \\"(published_status:published) AND (created_at:>='1970-01-01T00:00:00.000Z' OR updated_at:>='1970-01-01T00:00:00.000Z')\\") {
          edges {
            node {
              description
              descriptionHtml
              feedback {
                details {
                  app {
                    id
                  }
                  link {
                    label
                    url
                  }
                  messages {
                    field
                    message
                  }
                }
                summary
              }
              handle
              id
              image {
                altText
                height
                id
                originalSrc
                src
                transformedSrc
                width
              }
              legacyResourceId
              metafields {
                edges {
                  node {
                    createdAt
                    description
                    id
                    key
                    legacyResourceId
                    namespace
                    ownerType
                    updatedAt
                    value
                    type
                    valueType: type
                  }
                }
              }
              products {
                edges {
                  node {
                    id
                  }
                }
              }
              productsCount {
                count
                precision
              }
              ruleSet {
                appliedDisjunctively
                rules {
                  column
                  condition
                  relation
                }
              }
              seo {
                description
                title
              }
              sortOrder
              storefrontId
              templateSuffix
              title
              updatedAt
            }
          }
        }
      }
      
        \\"\\"\\"
      ) {
        bulkOperation {
          id
          status
        }
        userErrors {
          field
          message
        }
      }
    }
    ",
    "collections",
  ],
  Array [
    Object {
      "request": [Function],
    },
    "
      mutation INITIATE_BULK_OPERATION {
        bulkOperationRunQuery(
        query: \\"\\"\\"
          
      {
        locations(includeInactive: true, includeLegacy: true, query: \\"(published_status:published) AND (created_at:>='1970-01-01T00:00:00.000Z' OR updated_at:>='1970-01-01T00:00:00.000Z')\\") {
          edges {
            node {
              activatable
              address {
                address1
                address2
                city
                country
                countryCode
                formatted
                latitude
                longitude
                phone
                province
                provinceCode
                zip
              }
              addressVerified
              deactivatable
              deactivatedAt
              deletable
              fulfillmentService {
                fulfillmentOrdersOptIn
                handle
                id
                inventoryManagement
                productBased
                serviceName
                shippingMethods {
                  code
                  label
                }
                type
              }
              fulfillsOnlineOrders
              hasActiveInventory
              hasUnfulfilledOrders
              id
              isActive
              legacyResourceId
              name
              shipsInventory
            }
          }
        }
      }
      
        \\"\\"\\"
      ) {
        bulkOperation {
          id
          status
        }
        userErrors {
          field
          message
        }
      }
    }
    ",
    "locations",
  ],
]
`;

exports[`createOperations creates the proper queries and operations without sales channel and with lastBuildTime 2`] = `
Object {
  "cancelOperation": [Function],
  "cancelOperationInProgress": [Function],
  "collectionsOperation": Object {
    "execute": [Function],
    "name": "collections",
  },
  "completedOperation": [Function],
  "finishLastOperation": [Function],
  "locationsOperation": Object {
    "execute": [Function],
    "name": "locations",
  },
  "ordersOperation": Object {
    "execute": [Function],
    "name": "orders",
  },
  "productVariantsOperation": Object {
    "execute": [Function],
    "name": "variants",
  },
  "productsOperation": Object {
    "execute": [Function],
    "name": "products",
  },
}
`;

exports[`createOperations creates the proper queries and operations without sales channel and without lastBuildTime 1`] = `
Array [
  Array [
    Object {
      "request": [Function],
    },
    "
      mutation INITIATE_BULK_OPERATION {
        bulkOperationRunQuery(
        query: \\"\\"\\"
          
      {
        products(query: \\"(status:active) AND (published_status:published)\\") {
          edges {
            node {
              createdAt
              collections {
                edges {
                  node {
                    id
                  }
                }
              }
              description
              descriptionHtml
              featuredImage {
                altText
                height
                id
                originalSrc
                src
                transformedSrc
                width
              }
              featuredMedia {
                ... on Node {
                  id
                }
              }
              feedback {
                details {
                  app {
                    id
                  }
                  link {
                    label
                    url
                  }
                  messages {
                    field
                    message
                  }
                }
                summary
              }
              giftCardTemplateSuffix
              handle
              hasOnlyDefaultVariant
              hasOutOfStockVariants
              id
              isGiftCard
              legacyResourceId
              media {
                edges {
                  node {
                    alt
                    mediaContentType
                    mediaErrors {
                      code
                      details
                      message
                    }
                    preview {
                      image {
                        altText
                        height
                        id
                        originalSrc
                        src
                        transformedSrc
                        width
                      }
                      status
                    }
                    status
                    ... on ExternalVideo {
                      embeddedUrl
                      host
                      id
                    }
                    ... on MediaImage {
                      createdAt
                      fileErrors {
                        code
                        details
                        message
                      }
                      fileStatus
                      id
                      image {
                        altText
                        height
                        id
                        originalSrc
                        src
                        transformedSrc
                        width
                      }
                      mimeType
                    }
                    ... on Model3d {
                      filename
                      id
                      originalSource {
                        filesize
                        format
                        mimeType
                        url
                      }
                      sources {
                        filesize
                        format
                        mimeType
                        url
                      }
                    }
                    ... on Video {
                      filename
                      id
                      originalSource {
                        format
                        height
                        mimeType
                        url
                        width
                      }
                      sources {
                        format
                        height
                        mimeType
                        url
                        width
                      }
                    }
                  }
                }
              }
              mediaCount {
                count
                precision
              }
              metafields {
                edges {
                  node {
                    createdAt
                    description
                    id
                    key
                    legacyResourceId
                    namespace
                    ownerType
                    type
                    updatedAt
                    value
                    valueType: type
                  }
                }
              }
              onlineStorePreviewUrl
              onlineStoreUrl
              options {
                id
                name
                position
                values
              }
              priceRange {
                maxVariantPrice {
                  amount
                  currencyCode
                }
                minVariantPrice {
                  amount
                  currencyCode
                }
              }
              priceRangeV2 {
                maxVariantPrice {
                  amount
                  currencyCode
                }
                minVariantPrice {
                  amount
                  currencyCode
                }
              }
              productType
              publishedAt
              requiresSellingPlan
              sellingPlanGroupsCount {
                count
                precision
              }
              seo {
                description
                title
              }
              status
              storefrontId
              tags
              templateSuffix
              title
              totalInventory
              totalVariants
              tracksInventory
              updatedAt
              variants {
                edges {
                  node {
                    id
                  }
                }
              }
              vendor
            }
          }
        }
      }
    
        \\"\\"\\"
      ) {
        bulkOperation {
          id
          status
        }
        userErrors {
          field
          message
        }
      }
    }
    ",
    "products",
  ],
  Array [
    Object {
      "request": [Function],
    },
    "
      mutation INITIATE_BULK_OPERATION {
        bulkOperationRunQuery(
        query: \\"\\"\\"
          
      {
        productVariants(query: \\"(status:active) AND (published_status:published)\\") {
          edges {
            node {
              availableForSale
              barcode
              compareAtPrice
              createdAt
              displayName
              id
              image {
                altText
                height
                id
                originalSrc
                src
                transformedSrc
                width
              }
              inventoryItem @include(if: false) {
                countryCodeOfOrigin
                createdAt
                duplicateSkuCount
                harmonizedSystemCode
                id
                inventoryHistoryUrl
                inventoryLevels {
                  edges {
                    node {
                      quantities(names: [\\"incoming\\", \\"available\\", \\"committed\\", \\"reserved\\", \\"damaged\\", \\"safety_stock\\", \\"quality_control\\"]) {
                        name
                        quantity
                      }
                      id
                      location {
                        id
                      }
                    }
                  }
                }
                legacyResourceId
                locationsCount {
                  count
                  precision
                }
                provinceCodeOfOrigin
                requiresShipping
                sku
                tracked
                trackedEditable {
                  locked
                  reason
                }
                unitCost {
                  amount
                  currencyCode
                }
                updatedAt
                variant {
                  id
                }
              }
              inventoryPolicy
              inventoryQuantity
              legacyResourceId
              media {
                edges {
                  node {
                    ... on Node {
                      id
                    }
                  }
                }
              }
              position
              presentmentPrices {
                edges {
                  node {
                    compareAtPrice {
                      amount
                      currencyCode
                    }
                    price {
                      amount
                      currencyCode
                    }
                    __typename
                  }
                }
              }
              price
              product {
                id
              }
              requiresShipping
              selectedOptions {
                name
                value
              }
              sellingPlanGroupsCount {
                count
                precision
              }
              sku
              storefrontId
              taxCode
              taxable
              title
              updatedAt
              weight
              weightUnit
              metafields {
                edges {
                  node {
                    createdAt
                    description
                    id
                    key
                    legacyResourceId
                    namespace
                    ownerType
                    type
                    updatedAt
                    value
                    valueType: type
                  }
                }
              }
            }
          }
        }
      }
    
        \\"\\"\\"
      ) {
        bulkOperation {
          id
          status
        }
        userErrors {
          field
          message
        }
      }
    }
    ",
    "variants",
  ],
  Array [
    Object {
      "request": [Function],
    },
    "
      mutation INITIATE_BULK_OPERATION {
        bulkOperationRunQuery(
        query: \\"\\"\\"
          
      {
        orders(query: \\"\\") {
          edges {
            node {
              closed
              closedAt
              edited
              id
              lineItems {
                edges {
                  node {
                    id
                    product {
                      id
                    }
                  }
                }
              }
              refunds {
                createdAt
                id
              }
            }
          }
        }
      }
        \\"\\"\\"
      ) {
        bulkOperation {
          id
          status
        }
        userErrors {
          field
          message
        }
      }
    }
    ",
    "orders",
  ],
  Array [
    Object {
      "request": [Function],
    },
    "
      mutation INITIATE_BULK_OPERATION {
        bulkOperationRunQuery(
        query: \\"\\"\\"
          
      {
        collections(query: \\"(published_status:published)\\") {
          edges {
            node {
              description
              descriptionHtml
              feedback {
                details {
                  app {
                    id
                  }
                  link {
                    label
                    url
                  }
                  messages {
                    field
                    message
                  }
                }
                summary
              }
              handle
              id
              image {
                altText
                height
                id
                originalSrc
                src
                transformedSrc
                width
              }
              legacyResourceId
              metafields {
                edges {
                  node {
                    createdAt
                    description
                    id
                    key
                    legacyResourceId
                    namespace
                    ownerType
                    updatedAt
                    value
                    type
                    valueType: type
                  }
                }
              }
              products {
                edges {
                  node {
                    id
                  }
                }
              }
              productsCount {
                count
                precision
              }
              ruleSet {
                appliedDisjunctively
                rules {
                  column
                  condition
                  relation
                }
              }
              seo {
                description
                title
              }
              sortOrder
              storefrontId
              templateSuffix
              title
              updatedAt
            }
          }
        }
      }
      
        \\"\\"\\"
      ) {
        bulkOperation {
          id
          status
        }
        userErrors {
          field
          message
        }
      }
    }
    ",
    "collections",
  ],
  Array [
    Object {
      "request": [Function],
    },
    "
      mutation INITIATE_BULK_OPERATION {
        bulkOperationRunQuery(
        query: \\"\\"\\"
          
      {
        locations(includeInactive: true, includeLegacy: true, query: \\"(published_status:published)\\") {
          edges {
            node {
              activatable
              address {
                address1
                address2
                city
                country
                countryCode
                formatted
                latitude
                longitude
                phone
                province
                provinceCode
                zip
              }
              addressVerified
              deactivatable
              deactivatedAt
              deletable
              fulfillmentService {
                fulfillmentOrdersOptIn
                handle
                id
                inventoryManagement
                productBased
                serviceName
                shippingMethods {
                  code
                  label
                }
                type
              }
              fulfillsOnlineOrders
              hasActiveInventory
              hasUnfulfilledOrders
              id
              isActive
              legacyResourceId
              name
              shipsInventory
            }
          }
        }
      }
      
        \\"\\"\\"
      ) {
        bulkOperation {
          id
          status
        }
        userErrors {
          field
          message
        }
      }
    }
    ",
    "locations",
  ],
]
`;

exports[`createOperations creates the proper queries and operations without sales channel and without lastBuildTime 2`] = `
Object {
  "cancelOperation": [Function],
  "cancelOperationInProgress": [Function],
  "collectionsOperation": Object {
    "execute": [Function],
    "name": "collections",
  },
  "completedOperation": [Function],
  "finishLastOperation": [Function],
  "locationsOperation": Object {
    "execute": [Function],
    "name": "locations",
  },
  "ordersOperation": Object {
    "execute": [Function],
    "name": "orders",
  },
  "productVariantsOperation": Object {
    "execute": [Function],
    "name": "variants",
  },
  "productsOperation": Object {
    "execute": [Function],
    "name": "products",
  },
}
`;
